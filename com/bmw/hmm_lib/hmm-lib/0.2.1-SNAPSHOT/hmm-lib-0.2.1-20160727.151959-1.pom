<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<!--
 ~ Copyright (C) 2015-2016, BMW Car IT GmbH and BMW AG
 ~ Author: Stefan Holder (stefan.holder@bmw.de)
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
  -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.bmw.hmm_lib</groupId>
  <artifactId>hmm-lib</artifactId>
  <version>0.2.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>hmm-lib</name>
  <description>Hidden Markov Model (HMM) library for time-inhomogeneous Markov processes</description>
  <url>https://github.com/bmwcarit/hmm-lib</url>

  <developers>
    <developer>
    <organization>BMW Car IT GmbH, BMW AG</organization>
      <organizationUrl>http://www.bmw-carit.com, http://www.bmw.com</organizationUrl>
     </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <github.global.server>github</github.global.server>
  </properties>

  <scm>
    <connection>scm:git:git@github.com:bmwcarit/hmm-lib.git</connection>
    <developerConnection>scm:git:git@github.com:bmwcarit/hmm-lib.git</developerConnection>
    <url>git@github.com:bmwcarit/hmm-lib</url>
  </scm>

  <build>
    <plugins>
    	
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

	    <plugin>
	      <artifactId>maven-deploy-plugin</artifactId>
	      <version>2.8.1</version>
	      <configuration>
	        <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
	      </configuration>
	    </plugin>
	    
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.11</version>
        <configuration>
          <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
          <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
          <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
          <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
          <includes><include>**/*</include></includes>
        </configuration>
        <executions>
          <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>	    

    </plugins>
  </build>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
      <version>4.11</version>
    </dependency>
  </dependencies>
  
  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>
  
</project>
